name: Package and Upload Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
    branches:
      - "main"

# Grants permission to create releases
permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Upload Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade crudini splunk-packaging-toolkit splunk-add-on-ucc-framework

      - name: Get App Info
        id: app
        run: |
          MANIFEST="app.manifest"
          APP_CONF="default/app.conf"
          if [ -f "$MANIFEST" ]; then
            app_id=$(cat "$MANIFEST" | jq -r '.info.id.name')
            app_version=$(cat "$MANIFEST" | jq -r '.info.id.version')
            echo "name=${app_id}" >> $GITHUB_OUTPUT
            echo "version=${app_version}" >> $GITHUB_OUTPUT
          else
            app_id=$(crudini --get "$APP_CONF" package id 2>/dev/null || echo "")
            if [ -z "$app_id" ] && [ -f "$APP_CONF" ]; then
              app_id=$(crudini --get "$APP_CONF" id name 2>/dev/null || echo "")
            fi
            app_version=$(crudini --get "$APP_CONF" launcher version 2>/dev/null || echo "")
            echo "name=${app_id}" >> $GITHUB_OUTPUT
            echo "version=${app_version}" >> $GITHUB_OUTPUT
          fi
        working-directory: ./package

      - name: Build and bundle TA
        run: |
          ucc-gen build --ta-version ${{ steps.app.outputs.version }}
          chmod -R +r output
          chmod -R go-w output
          ucc-gen package --path output/${{ steps.app.outputs.name }}
        shell: bash

      # Release Notes to be added manually by editing the Release via UI!
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: ${{ steps.app.outputs.name }}*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
