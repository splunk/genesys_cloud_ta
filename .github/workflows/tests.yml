name: tests

on:
  # Temporary for testing
  push
  # pull_request:
  #   branches:
  #     - main
  #   types: [opened, reopened, synchronize]
  #   paths:
  #     - package/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  splunk-test:
    name: Deploy and test the TA
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        version: [9.3.3]
        # version: [9.4.1, 9.3.3, 9.2.5]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade splunk-packaging-toolkit splunk-add-on-ucc-framework

      - name: Build TA
        run: |
          app_version=$(cat "package/app.manifest" | jq -r '.info.id.version')
          ucc-gen build --ta-version ${app_version}
        shell: bash

      - name: Create Docker network
        run: docker network create shared-net

      - name: Start Mockoon container
        run: |
          docker run -d --name mockoon \
            --network shared-net \
            -v ${{ github.workspace }}/tests/genesyscloud_mock.json:/data/mockoon.json \
            -p 3004:3004 \
            mockoon/cli:latest \
            --data /data/mockoon.json --port 3004

      - name: Start Splunk container
        env:
          SPLUNK_START_ARGS: --answer-yes --no-prompt --accept-license
          SPLUNK_PASSWORD: password
          GENESYSCLOUD_HOST: http://mockoon:3004
        run: |
          app_id=$(cat "package/app.manifest" | jq -r '.info.id.name')
          docker run -d --name splunk \
            --network shared-net \
            -e SPLUNK_START_ARGS="$SPLUNK_START_ARGS" \
            -e SPLUNK_PASSWORD="$SPLUNK_PASSWORD" \
            -v ${{ github.workspace }}/output/${app_id}:/opt/splunk/etc/apps/${app_id} \
            -v ${{ github.workspace }}/etc/cicd/inputs.conf:/opt/splunk/etc/apps/${app_id}/local/inputs.conf \
            -p 8000:8000 \
            -p 8089:8089 \
            splunk/splunk:${{ matrix.version }}

      - name: Test mockoon is alive
        run: |
          docker logs mockoon
          for i in {1..30}; do
            if curl --silent --fail http://localhost:3004/; then
              echo "Mockoon is up!"
              exit 0
            fi
            echo "Waiting for Mockoon..."
            sleep 2
          done
          echo "Mockoon failed to start"
          exit 1

      - name: Test connectivity from Splunk to Mockoon
        run: |
          docker exec splunk curl -v http://mockoon:3004/ || echo "Failed to reach Mockoon from Splunk"

      # TODO check this
      # Shall the integration tests be executed into a different pipeline?
      # Or just run them all the time independently from any changes to client lib?
      - name: Run integration tests
        run: |
          pip install -r test-requirements.txt
          # python -m pytest
          make run-tests-cicd
        working-directory: ./tests
        # shell: bash

      - name: Run functional tests
        if: success()
        run: |
          make run-functional-tests-cicd
        # shell: bash
        working-directory: ./tests
