name: tests

on:
  # Temporary for testing
  push
  # pull_request:
  #   branches:
  #     - main
  #   types: [opened, reopened, synchronize]
  #   paths:
  #     - package/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  splunk-test:
    name: Deploy and test the TA
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        version: [9.2.5]
        # version: [9.4.1, 9.3.3, 9.2.5]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade splunk-packaging-toolkit splunk-add-on-ucc-framework

      - name: Build and bundle TA
        run: |
          app_version=$(cat "package/app.manifest" | jq -r '.info.id.version')
          app_id=$(cat "package/app.manifest" | jq -r '.info.id.name')
          ucc-gen build --ta-version ${app_version}
          mkdir -p output/${app_id}/local
          cp etc/cicd/inputs.conf output/${app_id}/local
          chmod -R +r output
          chmod -R go-w output
          ucc-gen package --path output/${app_id}
        shell: bash

      - name: Create Docker network
        run: docker network create shared-net

      # NOTE:
      # Not having services because of: connectivity and volumes mounting
      - name: Start Mockoon container
        run: |
          docker run -d --name mockoon \
            --network shared-net \
            -v ${{ github.workspace }}/tests/genesyscloud_mock.json:/data/mockoon.json \
            -p 3004:3004 \
            mockoon/cli:latest \
            --data /data/mockoon.json --port 3004 --log-transaction

      - name: Start Splunk container
        env:
          SPLUNK_START_ARGS: "--answer-yes --no-prompt --accept-license"
          SPLUNK_PASSWORD: password
          GENESYSCLOUD_HOST: http://mockoon:3004
        run: |
          app_id=$(cat "package/app.manifest" | jq -r '.info.id.name')
          docker run -d --name splunk \
            --network shared-net \
            -e SPLUNK_START_ARGS="$SPLUNK_START_ARGS" \
            -e SPLUNK_PASSWORD="$SPLUNK_PASSWORD" \
            -e GENESYSCLOUD_HOST="$GENESYSCLOUD_HOST" \
            -p 8000:8000 \
            -p 8089:8089 \
            splunk/splunk:${{ matrix.version }}
          # Wait for splunk to be up and running (min. 2minutes)
          sleep 120
          # echo "Print App Configuration"
          # curl -k -s -u admin:password https://localhost:8089/services/apps/local/${app_id}?output_mode=json

        # -v ${{ github.workspace }}/etc/ansible/default.yml:/tmp/defaults/default.yml \
        # -v ${{ github.workspace }}/output/${app_id}:/opt/splunk/etc/apps/${app_id} \
        # -v ${{ github.workspace }}/etc/cicd/inputs.conf:/opt/splunk/etc/apps/${app_id}/local/inputs.conf \

      - name: Test mockoon is alive
        run: |
          docker logs mockoon
          for i in {1..30}; do
            if curl --silent --fail http://localhost:3004/; then
              echo "Mockoon is up!"
              exit 0
            fi
            echo "Waiting for Mockoon..."
            sleep 2
          done
          echo "Mockoon failed to start"
          exit 1

      # - name: Restart instance
      #   run: |
      #     curl -k -s -u admin:password https://localhost:8089/services/server/control/restart -X POST
      #     sleep 30

      - name: Test Splunk is alive
        run: |
          docker logs splunk
          app_id=$(cat "package/app.manifest" | jq -r '.info.id.name')
          app_v=$(cat "package/app.manifest" | jq -r '.info.id.version')
          docker exec -i splunk ls -la /opt/splunk/etc/apps/${app_id}
          docker exec -i splunk ls -la /opt/splunk/etc/apps/${app_id}/local
          # docker exec -i splunk cat /opt/splunk/etc/apps/${app_id}/local/inputs.conf
          # curl -s -k -u admin:password 'https://localhost:8089/servicesNS/nobody/${app_id}/data/inputs?output_mode=json' | jq -r '.entry[].name'
          ls -la .
          curl -k -u admin:password \
            https://localhost:8089/services/apps/local \
            -F "name=${app_id}-${app_v}.tar.gz" \
            -F "update=true" -X POST

      - name: Test connectivity from Splunk to Mockoon
        run: |
          docker exec splunk curl -v http://mockoon:3004/ || echo "Failed to reach Mockoon from Splunk"

      - name: Run integration tests
        run: |
          pip install -r test-requirements.txt
          export GENESYSCLOUD_HOST="http://localhost:3004" && python -m pytest integration/*
        working-directory: ./tests

      - name: Run functional tests
        if: success()
        run: |
          python -m pytest modinput_functional/*
        working-directory: ./tests
